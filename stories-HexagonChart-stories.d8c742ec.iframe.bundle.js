"use strict";(self.webpackChunkhexagon_chart=self.webpackChunkhexagon_chart||[]).push([[755],{"./src/stories/HexagonChart.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{LargeIconSize:()=>LargeIconSize,NoZooming:()=>NoZooming,NonDraggable:()=>NonDraggable,SmallHexagonSize:()=>SmallHexagonSize,TextMode:()=>TextMode,TooltipOff:()=>TooltipOff,WithData:()=>WithData,WithLegend:()=>WithLegend,__namedExportsOrder:()=>__namedExportsOrder,dataWithEmptyArray:()=>dataWithEmptyArray,default:()=>HexagonChart_stories});var react=__webpack_require__("./node_modules/react/index.js");const src_useParentSize=()=>{const ref=(0,react.useRef)(null),[size,setSize]=(0,react.useState)({width:0,height:0});return(0,react.useEffect)((()=>{const currentRef=ref.current,observer=new ResizeObserver((()=>{currentRef&&setSize({width:currentRef.offsetWidth,height:currentRef.offsetHeight})}));return currentRef&&observer.observe(currentRef),()=>{currentRef&&observer.unobserve(currentRef)}}),[]),[ref,size]};var lib=__webpack_require__("./node_modules/react-hexgrid/lib/index.js");const ROOT3=Math.sqrt(3),pxRatio=(originSize,R)=>originSize*R/10,getLegendData=(data,key,defaultHexStroke,defaultHexColor,order)=>Object.values(data.reduce(((obj,el)=>{const legendElement={text:"text"===key?el.text||"":el.alarm||"",stroke:"text"===key?el.hexStroke||defaultHexStroke:el.hexAlarmStroke||"",color:"text"===key?el.hexColor||defaultHexColor:el.hexAlarmColor||""};return obj[legendElement.text]=legendElement,obj}),{})).filter((el=>""!==el.text)).sort(((a,b)=>"asc"===order?a.text.localeCompare(b.text):b.text.localeCompare(a.text))),colorToRgba=color=>{const canvas=document.createElement("canvas"),ctx=canvas.getContext("2d");if(!ctx)throw new Error("2D context not supported or canvas already initialized");ctx.fillStyle=color,document.body.appendChild(canvas);const computedColor=ctx.fillStyle;if(document.body.removeChild(canvas),/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(computedColor)){const{r,g,b}=(hex=>{let r=0,g=0,b=0;return 4===hex.length?(r=parseInt(hex[1]+hex[1],16),g=parseInt(hex[2]+hex[2],16),b=parseInt(hex[3]+hex[3],16)):7===hex.length&&(r=parseInt(hex[1]+hex[2],16),g=parseInt(hex[3]+hex[4],16),b=parseInt(hex[5]+hex[6],16)),{r,g,b}})(computedColor);return{r,g,b,a:1}}const rgbaMatch=computedColor.match(/rgba?\((\d+), (\d+), (\d+),? (\d+(\.\d+)?|)\)/);if(rgbaMatch)return{r:parseInt(rgbaMatch[1]),g:parseInt(rgbaMatch[2]),b:parseInt(rgbaMatch[3]),a:rgbaMatch[4]?parseFloat(rgbaMatch[4]):1};throw new Error("Invalid color format")},IconWithText=({color,stroke,text,legendType,setSelectedLegend})=>{const[pointer,setPointer]=(0,react.useState)("default");return react.createElement("div",{style:{cursor:pointer,display:"flex",flexDirection:"row",justifyContent:"flex-start",alignItems:"center",gap:"6px"},onMouseOver:()=>{setPointer("pointer"),"text"===legendType?setSelectedLegend({legendType,alarm:"",text}):"alarm"===legendType&&setSelectedLegend({legendType,text:"",alarm:text})},onMouseLeave:()=>{setPointer("default"),setSelectedLegend({legendType:"",text:"",alarm:""})}},react.createElement("div",{style:{backgroundColor:color,border:`${stroke} solid 1px`,borderRadius:"50%",width:"20px",height:"20px",display:"inline-block"}}),react.createElement("span",{style:{textAlign:"left",verticalAlign:"middle",fontSize:"14px",lineHeight:"24px"}},text))},HexagonChartLegend=({items,setSelectedLegend,legendType})=>react.createElement("div",{style:{height:"100%",display:"flex",flexDirection:"row",justifyContent:"flex-end",alignItems:"flex-start",padding:"2px 10px",gap:"16px"}},items.map(((item,index)=>react.createElement(IconWithText,{key:index,...item,setSelectedLegend,legendType})))),src_HexagonChartLegend=HexagonChartLegend;HexagonChartLegend.__docgenInfo={description:"",methods:[],displayName:"HexagonChartLegend",props:{items:{required:!0,tsType:{name:"Array",elements:[{name:"LegendData"}],raw:"LegendData[]"},description:""},legendType:{required:!0,tsType:{name:"union",raw:'"text" | "alarm"',elements:[{name:"literal",value:'"text"'},{name:"literal",value:'"alarm"'}]},description:""},setSelectedLegend:{required:!0,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"SelectedLegend"}],raw:"SetStateAction<SelectedLegend>"}],raw:"Dispatch<SetStateAction<SelectedLegend>>"},description:""}}};const HexagonElement=({containerRef,tooltipStyleRef,hex,data,goToLink,toolTipOn,tooltip,setTooltip,size,fontSize,fontFamily,fontColor,N,hexagonColor,hexagonStroke,hexagonStrokeWidth,disappearingPoint,contentsBackgroundShape,contentsBackgroundColor,contentsBackgroundStroke,contentsBackgroundStrokeWidth,contentsBackgroundSizeRatio,contentsBackgroundRadius,iconSize,selectedLegend,scale,mode})=>{const getMousePosition=(toolTipDom,container,event)=>{const containerRect=container.getBoundingClientRect(),toolTipRect=toolTipDom.getBoundingClientRect(),viewScale={x:1,y:1};let x=event.clientX-containerRect.left,y=event.clientY-containerRect.top;const centerX=containerRect.left+containerRect.width/2,centerY=containerRect.top+containerRect.height/2,mouseX=event.clientX,mouseY=event.clientY;return mouseX<centerX&&mouseY<centerY?(x=(x+25)/viewScale.x,y=(y+25)/viewScale.y):mouseX>=centerX&&mouseY<centerY?(x=(x-toolTipRect.width-25)/viewScale.x,y=(y+25)/viewScale.y):mouseX>=centerX&&mouseY>=centerY?(x=(x-toolTipRect.width-25)/viewScale.x,y=(y-toolTipRect.height-25)/viewScale.y):mouseX<centerX&&mouseY>=centerY&&(x=(x+25)/viewScale.x,y=(y-toolTipRect.height-25)/viewScale.y),{x,y,containerRect,toolTipRect,viewScale}},doAnimation=""===selectedLegend.text&&""===selectedLegend.alarm,isBright="text"===selectedLegend.legendType?data?.text===selectedLegend.text:data?.alarm===selectedLegend.alarm,visibility=((N,disappearingPoint,scale)=>scale>1.5?"visible":N>disappearingPoint?"hidden":"visible")(N,disappearingPoint,scale);return react.createElement(lib.VJ,{className:data?.hexAlarmStrokeBlink?"blink":"",q:hex.q,r:hex.r,s:hex.s,onMouseOver:e=>((data,event)=>{if(!toolTipOn)return;const container=containerRef.current,toolTipDom=tooltipStyleRef.current;if(!container||!toolTipDom)return;const{x,y}=getMousePosition(toolTipDom,container,event);setTooltip({...tooltip,x,y,content:data?.toolTip,borderColor:data?.hexAlarmColor?data?.hexAlarmColor:data?.hexColor,visible:!0})})(data,e),onMouseMove:e=>(event=>{if(!toolTipOn)return;const container=containerRef.current,toolTipDom=tooltipStyleRef.current;if(!container||!toolTipDom||!tooltip.visible)return;const{x,y}=getMousePosition(toolTipDom,container,event);toolTipDom.style.left=`${x}px`,toolTipDom.style.top=`${y}px`})(e),onMouseLeave:()=>{toolTipOn&&setTooltip({...tooltip,visible:!1,borderColor:""})},onClick:()=>{goToLink&&window.open(data?.link,"_blank")},style:{fill:(data?.hexAlarmColor?data.hexAlarmColor:data?.hexColor?data.hexColor:hexagonColor)??"",stroke:(data?.hexAlarmStroke?data.hexAlarmStroke:data?.hexStroke?data.hexStroke:hexagonStroke)??"",strokeDasharray:(data?.hexAlarmStrokeDasharray?data.hexAlarmStrokeDasharray:data?.hexStrokeStrokeDasharray)??"",strokeDashoffset:"2",strokeLinejoin:"round",strokeWidth:hexagonStrokeWidth??0,opacity:doAnimation||isBright?1:.3}},(visibility=>{if("hidden"===visibility)return null;const ratio=size.x*contentsBackgroundSizeRatio;switch(contentsBackgroundShape){case"circle":return react.createElement("circle",{r:ratio,stroke:contentsBackgroundStroke,strokeWidth:contentsBackgroundStrokeWidth,fill:contentsBackgroundColor});case"rect":return react.createElement("rect",{x:ratio/2*-1,y:ratio/2*-1,width:ratio,height:ratio,rx:pxRatio(contentsBackgroundRadius,size.x),ry:pxRatio(contentsBackgroundRadius,size.x),stroke:contentsBackgroundStroke,strokeWidth:contentsBackgroundStrokeWidth,fill:contentsBackgroundColor});default:return null}})(visibility),"text"===mode?react.createElement(lib.EY,{fontFamily,fill:fontColor,strokeWidth:0,fontSize:`${pxRatio(fontSize,size.x)}px`,visibility},data.text):"icon"===mode?react.createElement("foreignObject",{x:ROOT3*size.x/2*-1,y:-1*size.y,width:ROOT3*size.x,height:2*size.y},react.createElement("div",{style:{display:"flex",alignItems:"center",justifyContent:"center",height:"100%",visibility}},react.createElement("img",{src:data.icon,style:{width:`${iconSize}%`,height:"auto"},alt:""}))):null)},src_HexagonElement=HexagonElement;HexagonElement.__docgenInfo={description:"",methods:[],displayName:"HexagonElement",props:{containerRef:{required:!0,tsType:{name:"MutableRefObject",elements:[{name:"union",raw:"HTMLDivElement | null",elements:[{name:"HTMLDivElement"},{name:"null"}]}],raw:"MutableRefObject<HTMLDivElement | null>"},description:""},tooltipStyleRef:{required:!0,tsType:{name:"MutableRefObject",elements:[{name:"union",raw:"HTMLDivElement | null",elements:[{name:"HTMLDivElement"},{name:"null"}]}],raw:"MutableRefObject<HTMLDivElement | null>"},description:""},hex:{required:!0,tsType:{name:"Hex"},description:""},data:{required:!0,tsType:{name:"ItemData"},description:""},goToLink:{required:!0,tsType:{name:"boolean"},description:""},toolTipOn:{required:!0,tsType:{name:"boolean"},description:""},tooltip:{required:!0,tsType:{name:"ToolTipState"},description:""},setTooltip:{required:!0,tsType:{name:"Dispatch",elements:[{name:"SetStateAction",elements:[{name:"ToolTipState"}],raw:"SetStateAction<ToolTipState>"}],raw:"Dispatch<SetStateAction<ToolTipState>>"},description:""},size:{required:!0,tsType:{name:"signature",type:"object",raw:"{\n  x: number;\n  y: number;\n}",signature:{properties:[{key:"x",value:{name:"number",required:!0}},{key:"y",value:{name:"number",required:!0}}]}},description:""},fontSize:{required:!0,tsType:{name:"number"},description:""},fontFamily:{required:!1,tsType:{name:"string"},description:""},fontColor:{required:!1,tsType:{name:"string"},description:""},N:{required:!0,tsType:{name:"number"},description:""},hexagonColor:{required:!1,tsType:{name:"string"},description:""},hexagonStroke:{required:!1,tsType:{name:"string"},description:""},hexagonStrokeWidth:{required:!1,tsType:{name:"number"},description:""},disappearingPoint:{required:!0,tsType:{name:"number"},description:""},contentsBackgroundShape:{required:!1,tsType:{name:"union",raw:'"circle" | "rect" | "none"',elements:[{name:"literal",value:'"circle"'},{name:"literal",value:'"rect"'},{name:"literal",value:'"none"'}]},description:""},contentsBackgroundColor:{required:!1,tsType:{name:"string"},description:""},contentsBackgroundStroke:{required:!1,tsType:{name:"string"},description:""},contentsBackgroundStrokeWidth:{required:!1,tsType:{name:"number"},description:""},contentsBackgroundSizeRatio:{required:!0,tsType:{name:"number"},description:""},contentsBackgroundRadius:{required:!0,tsType:{name:"number"},description:""},iconSize:{required:!0,tsType:{name:"number"},description:""},selectedLegend:{required:!0,tsType:{name:"signature",type:"object",raw:"{ legendType: string; text: string; alarm: string }",signature:{properties:[{key:"legendType",value:{name:"string",required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"alarm",value:{name:"string",required:!0}}]}},description:""},scale:{required:!0,tsType:{name:"number"},description:""},mode:{required:!0,tsType:{name:"union",raw:'"text" | "icon"',elements:[{name:"literal",value:'"text"'},{name:"literal",value:'"icon"'}]},description:""}}};const HexagonChart=({data=[],width,height,spacing=1,hexagonMaxSize=30,goToLink=!1,toolTipOn=!0,legendOn=!0,fontSize=5,fontFamily,fontColor="black",disappearingPoint=200,hexagonMagnification=11,hexagonColor="rgba(63, 81, 181, 0.5)",hexagonStroke="rgba(63, 81, 181)",hexagonStrokeWidth,tooltipFontColor="black",tooltipFontSize=10,tooltipBackgroundColor="white",contentsBackgroundShape="none",contentsBackgroundColor="white",contentsBackgroundStroke,hexAlarmStrokeBlinkColor="red",contentsBackgroundStrokeWidth,contentsBackgroundSizeRatio=.5,contentsBackgroundRadius=10,iconSize=50,zooming=!0,draggable=!0,mode="text",order="asc",textLegendOrder="asc",alarmLegendOrder="asc"})=>{const[tooltip,setTooltip]=(0,react.useState)({visible:!1,content:[],borderColor:"",x:0,y:0}),containerRef=(0,react.useRef)(null),tooltipStyleRef=(0,react.useRef)(null),{legendHeight,hexagonHeight}=((originHeight,legendOn)=>legendOn?{legendHeight:.1*originHeight,hexagonHeight:.9*originHeight}:{legendHeight:0,hexagonHeight:originHeight})(height,legendOn),{hexes,size,origin}=(0,react.useMemo)((()=>((width,height,N,spacing,hexagonMagnification,hexagonMaxSize)=>{let count=0;const hexes=[];if(!(width&&height&&N&&spacing))return{hexes,size:{x:0,y:0},origin:{x:0,y:0}};const{w_prime,h_prime,cols,rows}=function calculateOptimalRectSize(_width,_height,_N){const aspectRatio=_width/_height;let cols,rows;for(aspectRatio>1?(cols=Math.ceil(Math.sqrt(_N*aspectRatio)),rows=Math.ceil(_N/cols)):(rows=Math.ceil(Math.sqrt(_N/aspectRatio)),cols=Math.ceil(_N/rows));cols*(rows-1)>=_N;)rows--;for(;(cols-1)*rows>=_N;)cols--;return{w_prime:_width/cols,h_prime:_height/rows,cols,rows}}(width,height,N);let r;for(r=0;r<rows;r++){const offset=Math.floor(r/2);for(let q=-offset;q<cols-offset&&count!==N;q++)hexes.push(new lib._h(q,r,-q-r)),count++}const size={x:w_prime/spacing/ROOT3/(width/100),y:h_prime/spacing/2/(height/100)};let maxSize=Math.max(size.x,size.y);maxSize*=.86*hexagonMagnification,maxSize=Math.min(maxSize,hexagonMaxSize),size.x=maxSize,size.y=maxSize;const{x,y}=size;return{hexes,size,origin:{x:(ROOT3*x+ROOT3*x*spacing*(cols-1)+(rows>1&&N>=2*cols?ROOT3*x/2:0))/2*-1+ROOT3*x/2,y:(2*y+1.5*y*spacing*(rows-1))/2*-1+2*y/2}}})(width,hexagonHeight,data.length,spacing,hexagonMagnification,hexagonMaxSize)),[hexagonMaxSize,width,hexagonHeight,data.length,spacing,hexagonMagnification]);order&&data.sort(((a,b)=>void 0===a.text&&void 0===b.text?0:void 0===a.text?"asc"===order?1:-1:void 0===b.text?"asc"===order?-1:1:"asc"===order?a.text.localeCompare(b.text):b.text.localeCompare(a.text)));const pointer=draggable?"grab":"default",gRef=(0,react.useRef)(null),[pointerStyle,setPointerStyle]=(0,react.useState)(pointer),[zoom,setZoom]=(0,react.useState)({scale:1,dx:0,dy:0}),[isDragging,setIsDragging]=(0,react.useState)(!1),[startPos,setStartPos]=(0,react.useState)({x:0,y:0,cx:0,cy:0}),[selectedLegend,setSelectedLegend]=(0,react.useState)({legendType:"",text:"",alarm:""}),blinkStyleRef=(0,react.useRef)(),colorToMatrixValues=(0,react.useMemo)((()=>{const rgba=colorToRgba(hexAlarmStrokeBlinkColor);return r=rgba.r,g=rgba.g,b=rgba.b,alpha=rgba.a,`0 0 0 0 ${r/255} 0 0 0 0 ${g/255} 0 0 0 0 ${b/255} 0 0 0 ${1===alpha?.25*alpha:alpha} 0`;var r,g,b,alpha}),[hexAlarmStrokeBlinkColor]);(0,react.useLayoutEffect)((()=>(blinkStyleRef.current=document.createElement("style"),blinkStyleRef.current.innerHTML=`\n        @keyframes blink {\n          25% { stroke: ${hexAlarmStrokeBlinkColor}; stroke-width: ${hexagonStrokeWidth??0};}\n          50% { stroke: ${hexAlarmStrokeBlinkColor}; stroke-width: ${2*(hexagonStrokeWidth??0)}; filter: url(#inset);}\n          25% { stroke: ${hexAlarmStrokeBlinkColor}; stroke-width: ${hexagonStrokeWidth??0};}\n        }\n        .blink {\n          animation: blink 2s infinite;\n          animation-delay: 4s;\n        }\n      `,document.head.appendChild(blinkStyleRef.current),()=>{void 0!==blinkStyleRef.current&&document.head.removeChild(blinkStyleRef.current)})),[hexAlarmStrokeBlinkColor,hexagonStrokeWidth]),(0,react.useEffect)((()=>{const svg=gRef.current?.closest("svg"),g=gRef.current,observer=new MutationObserver((()=>{if(svg&&g){const bbox=g.getBBox(),margin=20;svg.setAttribute("viewBox",`${bbox.x-margin} ${bbox.y-margin} ${bbox.width+2*margin} ${bbox.height+2*margin}`)}}));return g&&observer.observe(g,{childList:!0,attributes:!0,subtree:!0}),()=>{observer.disconnect()}}),[]);const convertToSvgPosition=(cx,cy)=>{const svg=gRef.current?.closest("svg");if(!svg)return;const ctm=svg.getScreenCTM(),point=svg.createSVGPoint();return point.x=cx,point.y=cy,point.matrixTransform(ctm?.inverse())},handleMouseUp=()=>{setIsDragging(!1),setPointerStyle(pointer)},textLegend=getLegendData(data,"text",hexagonStroke,hexagonColor,textLegendOrder),alarmLegend=getLegendData(data,"alarm",hexagonStroke,hexagonColor,alarmLegendOrder);return react.createElement("div",{ref:containerRef,style:{position:"absolute",display:"flex",flexDirection:"column"}},legendOn&&react.createElement("div",{style:{width:`${width}px`,height:`${legendHeight}px`,display:"flex",flexDirection:"row",justifyContent:"flex-end",alignItems:"flex-start",gap:"60px"}},textLegend.length>0&&react.createElement(src_HexagonChartLegend,{items:textLegend,legendType:"text",setSelectedLegend}),alarmLegend.length>0&&react.createElement(src_HexagonChartLegend,{items:alarmLegend,legendType:"alarm",setSelectedLegend})),react.createElement(lib.Q6,{width,height:hexagonHeight,viewBox:"-50 -50 100 100",onWheel:zooming?e=>{const domPoint=convertToSvgPosition(e.clientX,e.clientY);if(!domPoint)return;const{x,y}=domPoint,direction=e.deltaY>0?-1:1,newScale=Math.min(Math.max(zoom.scale+.1*direction,.1),5),dx=(1-newScale/zoom.scale)*(x-zoom.dx)+zoom.dx,dy=(1-newScale/zoom.scale)*(y-zoom.dy)+zoom.dy;setZoom({scale:newScale,dx,dy})}:void 0,onDoubleClick:draggable||zooming?e=>{e.preventDefault(),setIsDragging(!1),setStartPos({x:0,y:0,cx:0,cy:0}),setZoom({scale:1,dx:0,dy:0})}:void 0,onMouseDown:draggable?e=>{e.preventDefault(),setPointerStyle("grabbing"),setStartPos({x:zoom.dx,y:zoom.dy,cx:e.clientX,cy:e.clientY}),setIsDragging(!0)}:e=>e.preventDefault(),onMouseMove:draggable?e=>{if(!isDragging)return;const previousMousePosition=convertToSvgPosition(startPos.cx,startPos.cy),currentMousePosition=convertToSvgPosition(e.clientX,e.clientY);previousMousePosition&&currentMousePosition&&setZoom((prev=>({...prev,dx:startPos.x-(previousMousePosition.x-currentMousePosition.x),dy:startPos.y-(previousMousePosition.y-currentMousePosition.y)})))}:void 0,onMouseUp:draggable?handleMouseUp:void 0,onMouseLeave:draggable?handleMouseUp:void 0,style:{overflow:"hidden",cursor:pointerStyle}},react.createElement("defs",null,react.createElement("filter",{id:"inset",x:"-50%",y:"-50%",width:"200%",height:"200%",filterUnits:"userSpaceOnUse",colorInterpolationFilters:"sRGB"},react.createElement("feFlood",{floodOpacity:"0",result:"BackgroundImageFix"}),react.createElement("feColorMatrix",{in:"SourceAlpha",type:"matrix",values:"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",result:"hardAlpha"}),react.createElement("feOffset",null),react.createElement("feGaussianBlur",{stdDeviation:"2"}),react.createElement("feComposite",{in2:"hardAlpha",operator:"out"}),react.createElement("feColorMatrix",{type:"matrix",values:colorToMatrixValues}),react.createElement("feBlend",{mode:"normal",in2:"BackgroundImageFix",result:"effect1_dropShadow_2468_67926"}),react.createElement("feBlend",{mode:"normal",in:"SourceGraphic",in2:"effect1_dropShadow_2468_67926",result:"shape"}))),react.createElement("g",{ref:gRef,transform:`translate(${zoom.dx}, ${zoom.dy}) scale(${zoom.scale})`},react.createElement(lib.PE,{size,flat:!1,spacing,origin},hexes.map(((hex,i)=>react.createElement(src_HexagonElement,{key:i,size,containerRef,tooltipStyleRef,hex,data:data[i],goToLink,toolTipOn,tooltip,setTooltip,fontSize,fontFamily,fontColor,N:data.length,hexagonColor,hexagonStroke,hexagonStrokeWidth,disappearingPoint,contentsBackgroundShape,contentsBackgroundColor,contentsBackgroundStroke,contentsBackgroundStrokeWidth,contentsBackgroundSizeRatio,contentsBackgroundRadius,iconSize,selectedLegend,scale:zoom.scale,mode})))))),toolTipOn&&react.createElement("div",{ref:tooltipStyleRef,style:{position:"absolute",visibility:tooltip.visible?"visible":"hidden",backgroundColor:tooltipBackgroundColor||"white",color:tooltipFontColor||"black",fontFamily:fontFamily||"",fontSize:`${tooltipFontSize}px`,left:`${tooltip.x}px`,top:`${tooltip.y}px`,border:`2px solid ${tooltip.borderColor||"black"}`,opacity:.7,padding:"8px",borderRadius:"5px",zIndex:1e9}},tooltip.content?.map(((data,i)=>react.createElement("div",{key:i},`${data.key}: ${data.value}`)))))},src_HexagonChart=HexagonChart;HexagonChart.__docgenInfo={description:"",methods:[],displayName:"HexagonChart",props:{data:{required:!1,tsType:{name:"Array",elements:[{name:"ItemData"}],raw:"ItemData[]"},description:"",defaultValue:{value:"[]",computed:!1}},width:{required:!0,tsType:{name:"number"},description:""},height:{required:!0,tsType:{name:"number"},description:""},spacing:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"1.0",computed:!1}},hexagonMaxSize:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"30",computed:!1}},fontSize:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"5",computed:!1}},fontFamily:{required:!1,tsType:{name:"string"},description:""},fontColor:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"black"',computed:!1}},toolTipOn:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},legendOn:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},goToLink:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},disappearingPoint:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"200",computed:!1}},hexagonMagnification:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"11",computed:!1}},hexagonColor:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"rgba(63, 81, 181, 0.5)"',computed:!1}},hexagonStroke:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"rgba(63, 81, 181)"',computed:!1}},hexagonStrokeWidth:{required:!1,tsType:{name:"number"},description:""},hexAlarmStrokeBlinkColor:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"red"',computed:!1}},tooltipFontColor:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"black"',computed:!1}},tooltipFontSize:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"10",computed:!1}},tooltipBackgroundColor:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"white"',computed:!1}},contentsBackgroundShape:{required:!1,tsType:{name:"union",raw:'"circle" | "rect" | "none"',elements:[{name:"literal",value:'"circle"'},{name:"literal",value:'"rect"'},{name:"literal",value:'"none"'}]},description:"",defaultValue:{value:'"none"',computed:!1}},contentsBackgroundColor:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"white"',computed:!1}},contentsBackgroundStroke:{required:!1,tsType:{name:"string"},description:""},contentsBackgroundStrokeWidth:{required:!1,tsType:{name:"number"},description:""},contentsBackgroundSizeRatio:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"0.5",computed:!1}},contentsBackgroundRadius:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"10",computed:!1}},iconSize:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"50",computed:!1}},zooming:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},draggable:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},mode:{required:!1,tsType:{name:"union",raw:'"text" | "icon"',elements:[{name:"literal",value:'"text"'},{name:"literal",value:'"icon"'}]},description:"",defaultValue:{value:'"text"',computed:!1}},order:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"asc"',computed:!1}},textLegendOrder:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"asc"',computed:!1}},alarmLegendOrder:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"asc"',computed:!1}},noDataCustomComponent:{required:!1,tsType:{name:"signature",type:"function",raw:"() => ReactNode",signature:{arguments:[],return:{name:"ReactNode"}}},description:""}}};const HexagonChartWrapper=props=>{const[ref,size]=src_useParentSize();return react.createElement("div",null,react.createElement("div",{style:{display:props.data.length<=0?"flex":"none",position:"absolute",justifyContent:"center",alignItems:"center",width:"100%",height:"100%"}},props.noDataCustomComponent?props.noDataCustomComponent():react.createElement("span",null,"NO DATA")),react.createElement("div",{ref,style:{width:props.width,height:props.height}},react.createElement(src_HexagonChart,{...props,width:size.width,height:size.height})))},src_HexagonChartWrapper=HexagonChartWrapper;function getDummyData(DUMMY_DATA_SIZE){const types=[{type:"SERVER",color:"#D4E2FF",stroke:"#709CF9",icon:""},{type:"NETWORK",color:"#DEE9FF",stroke:"#709CF9",icon:""},{type:"DBMS",color:"#EDF3FF",stroke:"#709CF9",icon:""}],alarms=[{type:"DOWN",color:"#D6DADB",stroke:"#3E4142",hexAlarmStrokeBlink:!0},{type:"UP",color:"#FFFFFF",stroke:"#5C8DFF"},{type:"UNKNOWN",color:"#FFFFFF",stroke:"#F5B800",hexAlarmStrokeDasharray:"4 4",icon:"/suggested-warning-f.svg"}],list=[];for(let i=0;i<DUMMY_DATA_SIZE;i++){const el=getRandomElement(types),al=getRandomElement(alarms);list.push({text:el.type,alarm:al.type,icon:al.icon??"",hexColor:el.color,hexStroke:el.stroke,hexAlarmColor:al.color,hexAlarmStroke:al.stroke,hexAlarmStrokeBlink:al.hexAlarmStrokeBlink??!1,hexAlarmStrokeDasharray:al.hexAlarmStrokeDasharray??"",toolTip:[{key:"type",value:el.type}]})}return list}function getRandomElement(arr){return arr[Math.floor(Math.random()*arr.length)]}HexagonChartWrapper.__docgenInfo={description:"",methods:[],displayName:"HexagonChartWrapper",props:{width:{required:!0,tsType:{name:"string"},description:""},height:{required:!0,tsType:{name:"string"},description:""}},composes:["Omit"]};const mock_args={width:"998px",height:"480px",spacing:1.15,hexagonMaxSize:20,hexagonStrokeWidth:2,hexAlarmStrokeBlinkColor:"#850A10",legendOn:!1,mode:"icon",disappearingPoint:500,goToLink:!1,zooming:!0,draggable:!0,toolTipOn:!0,fontSize:2,iconSize:50},HexagonChart_stories={title:"Example/HexagonChart",component:src_HexagonChartWrapper,parameters:{layout:"centered"},tags:["autodocs"]},WithData={args:{...mock_args,data:getDummyData(50),mode:"icon"}},dataWithEmptyArray={args:{...mock_args,data:[],mode:"icon"}},NoZooming={args:{...mock_args,data:getDummyData(30),zooming:!1,mode:"icon"}},WithLegend={args:{...mock_args,data:getDummyData(20),legendOn:!0,mode:"icon"}},TextMode={args:{...mock_args,data:getDummyData(40),mode:"text"}},NonDraggable={args:{...mock_args,data:getDummyData(60),draggable:!1,mode:"icon"}},LargeIconSize={args:{...mock_args,data:getDummyData(50),iconSize:70,mode:"icon"}},TooltipOff={args:{...mock_args,data:getDummyData(50),toolTipOn:!1,mode:"icon"}},SmallHexagonSize={args:{...mock_args,data:getDummyData(50),hexagonMaxSize:10,mode:"icon"}},__namedExportsOrder=["WithData","dataWithEmptyArray","NoZooming","WithLegend","TextMode","NonDraggable","LargeIconSize","TooltipOff","SmallHexagonSize"];WithData.parameters={...WithData.parameters,docs:{...WithData.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...args,\n    data: getDummyData(50),\n    mode: "icon"\n  }\n}',...WithData.parameters?.docs?.source}}},dataWithEmptyArray.parameters={...dataWithEmptyArray.parameters,docs:{...dataWithEmptyArray.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...args,\n    data: [],\n    mode: "icon"\n  }\n}',...dataWithEmptyArray.parameters?.docs?.source}}},NoZooming.parameters={...NoZooming.parameters,docs:{...NoZooming.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...args,\n    data: getDummyData(30),\n    zooming: false,\n    mode: "icon"\n  }\n}',...NoZooming.parameters?.docs?.source}}},WithLegend.parameters={...WithLegend.parameters,docs:{...WithLegend.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...args,\n    data: getDummyData(20),\n    legendOn: true,\n    mode: "icon"\n  }\n}',...WithLegend.parameters?.docs?.source}}},TextMode.parameters={...TextMode.parameters,docs:{...TextMode.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...args,\n    data: getDummyData(40),\n    mode: "text"\n  }\n}',...TextMode.parameters?.docs?.source}}},NonDraggable.parameters={...NonDraggable.parameters,docs:{...NonDraggable.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...args,\n    data: getDummyData(60),\n    draggable: false,\n    mode: "icon"\n  }\n}',...NonDraggable.parameters?.docs?.source}}},LargeIconSize.parameters={...LargeIconSize.parameters,docs:{...LargeIconSize.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...args,\n    data: getDummyData(50),\n    iconSize: 70,\n    mode: "icon"\n  }\n}',...LargeIconSize.parameters?.docs?.source}}},TooltipOff.parameters={...TooltipOff.parameters,docs:{...TooltipOff.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...args,\n    data: getDummyData(50),\n    toolTipOn: false,\n    mode: "icon"\n  }\n}',...TooltipOff.parameters?.docs?.source}}},SmallHexagonSize.parameters={...SmallHexagonSize.parameters,docs:{...SmallHexagonSize.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...args,\n    data: getDummyData(50),\n    hexagonMaxSize: 10,\n    mode: "icon"\n  }\n}',...SmallHexagonSize.parameters?.docs?.source}}}}}]);